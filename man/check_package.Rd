% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_package.R
\name{check_package}
\alias{check_package}
\alias{assert_package}
\title{Check if an object is an installed package of the required version}
\usage{
check_package(x, version = NULL)

assert_package(
  x,
  version = NULL,
  comment = NULL,
  .var.name = checkmate::vname(x),
  add = NULL
)
}
\arguments{
\item{x}{[any]\cr
Object to check.}

\item{version}{[character(1)]\cr
The required version of the installed package. May be \code{NULL}.}

\item{comment}{[\code{character(1)}]\cr
Extra information to be appended to the standard error message in assert-functions}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in error messages. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertions. See \code{\link[checkmate]{AssertCollection}}.}
}
\value{
Depending on the function prefix:\cr
If the check is successful, the function
\code{assert_package} return \code{x} invisibly, whereas
\code{check_package} return \code{TRUE}.\cr
If the check is not successful,
\code{assert_package} throws an error message and
\code{check_package} returns a string with the error message.
}
\description{
Check if an package is installed and if it is installed, check if the version is equal
to or higher than the required version.
}
\examples{
# returns TRUE 
check_package(x = "checkmate" , version = "2.0.0")

# returns an error message
check_package(x = "nopackage")
}
