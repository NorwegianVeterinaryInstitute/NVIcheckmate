% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_arg.R
\name{match_arg}
\alias{match_arg}
\title{Argument Verification Using Partial Matching}
\usage{
match_arg(
  x,
  choices,
  several.ok = FALSE,
  ignore.case = FALSE,
  .var.name = checkmate::vname(x),
  comment = NULL,
  add = NULL
)
}
\arguments{
\item{x}{[\code{character}]\cr
User provided argument to match.}

\item{choices}{[\code{character}]\cr
Candidates to match \code{x} with.}

\item{several.ok}{[\code{logical(1)}]\cr
If \code{TRUE}, \code{x} should be allowed to have more than one element.}

\item{ignore.case}{[\code{logical(1)}]\cr
Case is ignored if \code{TRUE}. Default is \code{FALSE}.}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in error messages. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{comment}{[\code{character(1)}]\cr
Extra information to be appended to the standard error message in assertions.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertions. See \code{\link[checkmate]{AssertCollection}}.}
}
\value{
Character vector with subset of \code{choices}.
}
\description{
match.arg matches arguments against a table of candidate values as specified
    by choices. Matching is done using \code{\link[base]{grep}}, and arguments
    may be abbreviated. If \code{ignore.case = TRUE}, case is ignored when performing
    the matching.
}
\details{
Partial Argument Matching

This is an extensions to \code{\link[checkmate]{matchArg}} with support
    for \code{ignore.case} and \code{comment}. \code{\link[checkmate]{matchArg}} is an
    extension of \code{\link[base]{match.arg}}
    with support for \code{\link{AssertCollection}}.
    The behavior is very similar to \code{\link[base]{match.arg}}, with a few
    exceptions:
* \code{NULL} is not a valid value for \code{x}.
* When \code{several.ok} = \code{TRUE}, it is required that all
    values for \code{x} match a value in \code{choices} and that
    each value in \code{x} matches only one value in \code{choices}.
* When \code{several.ok} = \code{FALSE}, it is required that
    \code{length(x)} == 1 and that \code{x} matches one and only one
    value in \code{choices}.
}
\examples{
match_arg("a", choices = c("Apple", "Banana"), ignore.case = TRUE)
match_arg(c("a", "Ban"), choices = c("Apple", "Banana"), several.ok = TRUE, ignore.case = TRUE)
}
