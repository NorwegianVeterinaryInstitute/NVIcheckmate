% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_subset_anycase.R
\name{check_subset_anycase}
\alias{check_subset_anycase}
\alias{assert_subset_anycase}
\title{Check if an argument is a subset of a given set regardless of case}
\usage{
check_subset_anycase(x, choices, empty.ok = TRUE, fmatch = FALSE)

assert_subset_anycase(
  x,
  choices,
  empty.ok = TRUE,
  fmatch = FALSE,
  .var.name = vname(x),
  add = NULL
)
}
\arguments{
\item{x}{[any]\cr
Object to check.}

\item{choices}{[\code{character}]\cr
Set of possible values. May be empty.}

\item{empty.ok}{[\code{logical(1)}]\cr
Treat zero-length \code{x} as subset of any set \code{choices} (this includes \code{NULL})?
Default is \code{TRUE}.}

\item{fmatch}{[\code{logical(1)}]\cr
Use the set operations implemented in \code{fmatch} in package \pkg{fastmatch}.
If \pkg{fastmatch} is not installed, this silently falls back to \code{\link[base]{match}}.
\code{fastmatch::fmatch} modifies \code{y} by reference:
A hash table is added as attribute which is used in subsequent calls.}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in error messages. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertions. See \code{\link[checkmate]{AssertCollection}}.}
}
\value{
Depending on the function prefix:\cr
If the check is successful, the function
\code{assert_subset_anycase} return \code{x} invisibly, whereas
\code{check_subset_anycase} return \code{TRUE}.\cr
If the check is not successful,
\code{assert_subset_anycase} throws an error message and
\code{check_subset_anycase} returns a string with the error message.
}
\description{
Check if an object is a subset of a given set regardless of the object name is
written in lower and upper case. The function is based on code/{checkmate::check_subset}.
}
\details{
The object must be of type character. The check is intended for functions were using
camelCase may make the argument easier to remember. Therefore, the input to the function is
made case insensitive.
}
\examples{
# returns TRUE
check_subset_anycase(x = "Apple", choices = c("apple", "pear", "orange", "banana"))
check_subset_anycase(x = c("Apple", "Pear"), choices = c("apple", "pear", "orange", "banana"))

# returns a message
check_subset_anycase(x = "Tomato", choices = c("apple", "pear", "orange", "banana"))
}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
